--------------------------------------------------------
--  DDL for Procedure IMPORT_DELETED_TO_LIBIAS
--------------------------------------------------------

CREATE OR REPLACE PROCEDURE IMPORT_DELETED_TO_LIBIAS (pDATE IN DATE) AS
  IMAGES_COUNT NUMBER := 0;
  DATE_PARAM DATE := TRUNC(pDATE);
  NO_IMAGES_EX EXCEPTION;

  err_code NUMBER;
  err_message VARCHAR2(256);

BEGIN
    SELECT COUNT(1) INTO IMAGES_COUNT FROM COGNI.BILD_DELETED WHERE DATE_MODIFIED = DATE_PARAM
    AND EXISTS (SELECT 1 FROM BILD WHERE OID = COGNI.BILD_DELETED.OID);
    IF IMAGES_COUNT = 0 THEN 
        RAISE NO_IMAGES_EX;
    END IF;

    UPDATE BILD SET DATE_DELETED = DATE_PARAM, ACTIVE = 0
    WHERE OID IN (SELECT OID FROM COGNI.BILD_DELETED WHERE DATE_MODIFIED = DATE_PARAM);

    DELETE FROM COGNI.BILD_DELETED WHERE DATE_MODIFIED = DATE_PARAM;

    INSERT INTO LOG(METHOD, SEVERITY, MESSAGE, TIMESTAMP, TYPE)
    VALUES ('IMPORT_DELETED_TO_LIBIAS', 'DEBUG', 'STATUS: FINISHED', SYSDATE, 5);
    COMMIT;

EXCEPTION
  WHEN NO_IMAGES_EX THEN
    ROLLBACK;
    INSERT INTO LOG(METHOD, SEVERITY, MESSAGE, TIMESTAMP, TYPE)
    VALUES ('IMPORT_DELETED_TO_LIBIAS', 'DEBUG', 'STATUS: NO DELETED IMAGES FOUND IN MARIS', SYSDATE, 5);
    COMMIT;
  WHEN OTHERS THEN
    err_code := SQLCODE;
    err_message := SUBSTR(SQLERRM, 1, 256);
    ROLLBACK;
    INSERT INTO LOG(METHOD, SEVERITY, MESSAGE, TIMESTAMP, TYPE)
    VALUES ('IMPORT_DELETED_TO_LIBIAS', 'ERROR', 'IMPORT FAILED, FIRST ERROR: ' || err_code || ' - ' || err_message, SYSDATE, 5);
    COMMIT;
END;
/


--------------------------------------------------------
--  DDL for Procedure IMPORT_DELETED_TO_COGNITEC
--------------------------------------------------------

CREATE OR REPLACE PROCEDURE IMPORT_DELETED_TO_COGNITEC (pDATE IN DATE) AS
  IMAGES_COUNT NUMBER := 0;
  DATE_PARAM DATE := TRUNC(pDATE);
  NO_IMAGES_EX EXCEPTION;

  err_code NUMBER;
  err_message VARCHAR2(256);

BEGIN
    SELECT COUNT(1) INTO IMAGES_COUNT FROM BILD WHERE DATE_DELETED = DATE_PARAM;
    IF IMAGES_COUNT = 0 THEN
        RAISE NO_IMAGES_EX;
    END IF;

    DELETE FROM DBSCANADMIN.FIRS WHERE CASEID IN (SELECT OID FROM BILD WHERE DATE_DELETED = DATE_PARAM);
    DELETE FROM DBSCANADMIN.IMAGES WHERE CASEID IN (SELECT OID FROM BILD WHERE DATE_DELETED = DATE_PARAM);
    DELETE FROM DBSCANADMIN.CASES WHERE CASEID IN (SELECT OID FROM BILD WHERE DATE_DELETED = DATE_PARAM);

    INSERT INTO LOG(METHOD, SEVERITY, MESSAGE, TIMESTAMP, TYPE)
    VALUES ('IMPORT_DELETED_TO_COGNITEC', 'DEBUG', 'STATUS: FINISHED', SYSDATE, 5);
    COMMIT;

EXCEPTION
  WHEN NO_IMAGES_EX THEN
    ROLLBACK;
    INSERT INTO LOG(METHOD, SEVERITY, MESSAGE, TIMESTAMP, TYPE)
    VALUES ('IMPORT_DELETED_TO_COGNITEC', 'DEBUG', 'STATUS: NO DELETED IMAGES FOUND IN LIBIAS FOR DATE ' || DATE_PARAM, SYSDATE, 5);
    COMMIT;
  WHEN OTHERS THEN
    err_code := SQLCODE;
    err_message := SUBSTR(SQLERRM, 1, 256);
    ROLLBACK;
    INSERT INTO LOG(METHOD, SEVERITY, MESSAGE, TIMESTAMP, TYPE)
    VALUES ('IMPORT_DELETED_TO_COGNITEC', 'ERROR', 'IMPORT FAILED, FIRST ERROR: ' || err_code || ' - ' || err_message, SYSDATE, 5);
    COMMIT;
END;
/


--------------------------------------------------------
--  DDL for Procedure IMPORT_LIBIAS_TO_COGNITEC
--------------------------------------------------------

CREATE OR REPLACE PROCEDURE IMPORT_LIBIAS_TO_COGNITEC (pJOB_ID IN VARCHAR) AS
  IMAGES_COUNT NUMBER := 0;
  BATCH_SIZE NUMBER := 0;
  IMAGES_IMPORTED NUMBER := 0;

  NO_IMAGES_EX EXCEPTION;

  TYPE IMG IS TABLE OF BILD%ROWTYPE;
  IMAGES_TO_IMPORT IMG;

  TYPE IDS IS TABLE OF DBSCANADMIN.CASES.RECORDID%TYPE;
  CASES_IDS IDS;

  err_num NUMBER;
  err_code NUMBER;
  err_message VARCHAR2(256);

BEGIN
    SELECT COUNT(1) INTO IMAGES_COUNT FROM BILD WHERE JOB_ID IS NULL;
    CASE
        WHEN IMAGES_COUNT > 0 AND IMAGES_COUNT <= 1000 THEN BATCH_SIZE := IMAGES_COUNT;
        WHEN IMAGES_COUNT > 1000 AND IMAGES_COUNT <= 100000 THEN BATCH_SIZE := CEIL(IMAGES_COUNT / 10);
        WHEN IMAGES_COUNT > 100000 THEN BATCH_SIZE := CEIL(IMAGES_COUNT / 100);
        ELSE RAISE NO_IMAGES_EX;
    END CASE;

    WHILE (IMAGES_COUNT - IMAGES_IMPORTED) > 0 LOOP
        SELECT OID, JOB_ID, DATE_CREATED, BILDDATEN, DATE_DELETED, ACTIVE BULK COLLECT INTO IMAGES_TO_IMPORT
        FROM BILD WHERE JOB_ID IS NULL AND ROWNUM <= BATCH_SIZE;

        FORALL i IN IMAGES_TO_IMPORT.first .. IMAGES_TO_IMPORT.last SAVE EXCEPTIONS
        INSERT INTO DBSCANADMIN.CASES(RECORDID, ISSUER, SERIAL, CASEID, NAME)
        VALUES (IMAGES_TO_IMPORT(i).OID, 1, 1, IMAGES_TO_IMPORT(i).OID, IMAGES_TO_IMPORT(i).OID)
        RETURNING RECORDID BULK COLLECT INTO CASES_IDS;

        FORALL i IN IMAGES_TO_IMPORT.first .. IMAGES_TO_IMPORT.last SAVE EXCEPTIONS
        INSERT INTO DBSCANADMIN.IMAGES(RECORDID, ISSUER, SERIAL, CASEID, IMG)
        VALUES (IMAGES_TO_IMPORT(i).OID, 1, 1, IMAGES_TO_IMPORT(i).OID, IMAGES_TO_IMPORT(i).BILDDATEN);

        FORALL i IN IMAGES_TO_IMPORT.first .. IMAGES_TO_IMPORT.last SAVE EXCEPTIONS
        UPDATE BILD SET JOB_ID = pJOB_ID WHERE OID = IMAGES_TO_IMPORT(i).OID;

        IMAGES_IMPORTED := IMAGES_IMPORTED + CASES_IDS.COUNT;
        INSERT INTO LOG(METHOD, SEVERITY, MESSAGE, TIMESTAMP, TYPE)
        VALUES ('IMPORT_LIBIAS_TO_COGNITEC', 'DEBUG', 'STATUS: ' || (ROUND((IMAGES_IMPORTED / IMAGES_COUNT) * 100, 0)) || '% FINISHED', SYSDATE, 5);
        COMMIT;
    END LOOP;

EXCEPTION
  WHEN NO_IMAGES_EX THEN
    ROLLBACK;
    INSERT INTO LOG(METHOD, SEVERITY, MESSAGE, TIMESTAMP, TYPE)
    VALUES ('IMPORT_LIBIAS_TO_COGNITEC', 'DEBUG', 'STATUS: NO IMAGES FOUND IN LIBIAS FOR JOBID ' || pJOB_ID, SYSDATE, 5);
    COMMIT;
  WHEN OTHERS THEN
    IF SQL%BULK_EXCEPTIONS.COUNT > 0 THEN
      err_num := SQL%BULK_EXCEPTIONS.COUNT;
      err_code := SQL%BULK_EXCEPTIONS(1).ERROR_CODE;
      err_message := SUBSTR(SQLERRM(-SQL%BULK_EXCEPTIONS(1).ERROR_CODE), 1 , 256);
    ELSE
      err_num := 1;
      err_code := SQLCODE;
      err_message := SUBSTR(SQLERRM, 1, 256);
    END IF;
    ROLLBACK;
    INSERT INTO LOG(METHOD, SEVERITY, MESSAGE, TIMESTAMP, TYPE)
    VALUES ('IMPORT_LIBIAS_TO_COGNITEC', 'ERROR', 'IMPORT FAILED FOR: ' || err_num || ' IMAGES. FIRST ERROR: ' || err_code || ' - ' || err_message, SYSDATE, 5);
    COMMIT;
END;
/
